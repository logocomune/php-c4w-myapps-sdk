<?php
namespace MyAppsSdk\Test\Context;

use MyAppsSdk\Context\Context;
use PHPUnit_Framework_TestCase;

class ContextTest extends PHPUnit_Framework_TestCase
{

    private $preAuthData;

    private $postAuthData;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->preAuthData = json_decode(file_get_contents(__DIR__ . "/../samples/pre-auth.json"), true);

        $this->postAuthData = json_decode(file_get_contents(__DIR__ . "/../samples/post-auth.json"), true);
    }

    public function testObj()
    {
        $context = new Context($this->postAuthData);
        $this->assertInstanceOf('\MyAppsSdk\Context\Customer', $context->getCustomer());
        $this->assertInstanceOf('\MyAppsSdk\Context\Hotspot', $context->getHotspot());
        $this->assertInstanceOf('\MyAppsSdk\Context\Venue', $context->getVenue());
        $this->assertInstanceOf('\MyAppsSdk\Context\Company', $context->getCompany());
    }

    public function testContent()
    {
        $context = new Context($this->postAuthData);
        $this->assertNotEmpty($context->getCustomer()->getRaw());
        $this->assertNotEmpty($context->getHotspot()->getRaw());
        $this->assertNotEmpty($context->getVenue()->getRaw());
        $this->assertNotEmpty($context->getCompany()->getRaw());
        $this->assertEquals("123", $context->getCustomer()->getPhone());
        $this->assertEquals("9067", $context->getHotspot()->getId());
        $this->assertEquals("ae092a5b3e283c8373ke2bf18cde0005", $context->getVenue()->getId());
        $this->assertEquals("1001", $context->getCompany()->getId());



        $context = new Context();
        $this->assertEmpty($context->getCustomer()->getRaw());
        $this->assertEmpty($context->getHotspot()->getRaw());
        $this->assertEmpty($context->getVenue()->getRaw());
        $this->assertEmpty($context->getCompany()->getRaw());
    }
}
